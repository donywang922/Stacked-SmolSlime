&red_pwm_led {
	pwms = <&pwm0 0 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
};
&green_pwm_led {
	pwms = <&pwm0 1 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
};
&blue_pwm_led {
	pwms = <&pwm0 2 PWM_MSEC(1) PWM_POLARITY_INVERTED>;
};

/ {
	battery-divider {
		compatible = "voltage-divider";
		status = "okay";
		io-channels = <&adc 12>; // Measure VDDHDIV5
		output-ohms = <1>;
		full-ohms = <2>;
	};
};

&i2c0 {
	compatible = "nordic,nrf-twim";
	zephyr,concat-buf-size = <1023>;
	zephyr,flash-buf-max-size = <1023>;
	clock-frequency = <I2C_BITRATE_FAST>;

	imu: imu@0 { // any address out of range (00, 7f, etc. will search all addresses and stored address first if available, specify an address here to search first otherwise
		compatible = "i2c-device";
		label = "imu";
		reg = <0>;
	};

	mag: mag@0 {
		compatible = "i2c-device";
		label = "mag";
		reg = <0>;
	};

};

arduino_spi: &spi3 {
	imu_spi: imu_spi@0 {
		compatible = "vnd,spi-device";
		spi-max-frequency = <DT_FREQ_M(32)>;
		label = "imu-spi";
		reg = <0>;
	};
};
